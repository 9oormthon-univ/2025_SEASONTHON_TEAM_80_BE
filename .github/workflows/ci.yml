name: CI Pipeline (Fork-safe)

on:
  push:
    branches:
      - develop
      - main
      - 'feat/**'
      - 'setting/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Fork PR/feature 브랜치에서도 token 없이 checkout
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref_name }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Give execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: 파일 생성
        run:
          # application.yml 파일 생성
          echo "${{ secrets.APPLICATION_YML }}" > /home/ubuntu/2025_SEASONTHON_TEAM_80_BE/src/main/resources/application.yml
          
          # docker-compose.yml 파일 생성
          cat <<EOF > /home/ubuntu/2025_SEASONTHON_TEAM_80_BE/docker-compose.yml
          ${{ secrets.DOCKER_COMPOSE_YML }}
          EOF
          
          # .env 파일 생성
          echo "${{ secrets.ENV }}" > /home/ubuntu/2025_SEASONTHON_TEAM_80_BE/.env

      # main/develop 브랜치에서만 Docker 빌드 & Hub push
      - name: Build & Push Docker image
        #if: startsWith(github.ref, 'refs/heads/develop') || startsWith(github.ref, 'refs/heads/main')
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USER_NAME }}/firstsori-dev
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USER_NAME }}" --password-stdin
          docker build -t $IMAGE_NAME:latest -f ./Dockerfile .
          docker push $IMAGE_NAME:latest
